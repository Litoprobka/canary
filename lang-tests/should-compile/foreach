explicitMap : foreach a b -> (a -> b) -> List a -> List b
explicitMap a b f = match
    (Cons x xs) -> Cons (f x) (explicitMap a b f xs)
    Nil -> Nil

implicitMap : forall a b. (a -> b) -> List a -> List b
implicitMap f list = case list of
    Cons x xs -> Cons (f x) (implicitMap f xs)
    Nil -> Nil

main = explicitMap Int Int (\_ -> 3) [1, 2, 4, 5]